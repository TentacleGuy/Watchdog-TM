class AnalogStick{constructor(){this.stick=document.querySelector(".analog-stick"),this.bounds=document.querySelector(".analog-stick-bounds"),this.isDragging=!1,this.lastSentTime=0,this.updateInterval=100,this.MAX_SPEED=1,this.MAX_TURN_RATE=1,this.WHEEL_BASE=.3,this.canvasScale=100,this.arcAngle=Math.PI/2,this.canvas=document.getElementById("turning-canvas"),this.canvas&&(this.ctx=this.canvas.getContext("2d"),this.robotX=this.canvas.width/2,this.robotY=this.canvas.height-50),this.socket=window.sharedSocket,this.setupEventListeners()}setupEventListeners(){this.stick.addEventListener("mousedown",t=>this.startDragging(t)),this.stick.addEventListener("mousemove",t=>this.drag(t)),document.addEventListener("mouseup",()=>this.stopDragging()),this.stick.addEventListener("touchstart",t=>this.startDragging(t)),this.stick.addEventListener("touchmove",t=>this.drag(t)),document.addEventListener("touchend",()=>this.stopDragging())}startDragging(t){this.isDragging=!0;var i=this.bounds.getBoundingClientRect();this.initialX=("mousedown"===t.type?t:t.touches[0]).clientX-i.left,this.initialY=("mousedown"===t.type?t:t.touches[0]).clientY-i.top}drag(t){var i,s;this.isDragging&&(t.preventDefault(),i=this.bounds.getBoundingClientRect(),s=(t.type.startsWith("mouse")?t:t.touches[0]).clientX-i.left,t=(t.type.startsWith("mouse")?t:t.touches[0]).clientY-i.top,this.updateStickPosition(s,t))}stopDragging(){this.isDragging&&(this.isDragging=!1,this.reset())}reset(){this.stick.style.left="50%",this.stick.style.top="50%",this.sendMotorCommand(0,0,0,0),this.ctx&&this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}updateStickPosition(t,i){var s=this.bounds.getBoundingClientRect(),h=s.width/2,e=t-s.width/2,a=i-s.height/2,e=(h<Math.sqrt(e*e+a*a)&&(a=Math.atan2(a,e),t=h*Math.cos(a)+s.width/2,i=h*Math.sin(a)+s.height/2),this.stick.style.left=t/s.width*100+"%",this.stick.style.top=i/s.height*100+"%",(t-s.width/2)/h),a=(i-s.height/2)/h;this.calculateMotorValues(e,a)}calculateMotorValues(h,e){var a=Date.now();if(!(a-this.lastSentTime<this.updateInterval)){this.lastSentTime=a;a=Math.sqrt(h*h+e*e);if(a<.1)this.sendMotorCommand(0,0),this.ctx&&this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);else{var a=Math.min(a,1),o=Math.atan2(h,-e);this.lastStickAngle=o,this.lastStickMultiplier=Math.min(Math.sqrt(h*h+e*e),1);let t=Math.atan2(h,-e)*(180/Math.PI),i=(t<0&&(t+=360),0),s=0;o=255,h=(0<=t&&t<90?(i=o,s=o*Math.pow(1-t/90,2)):90<=t&&t<180?(i=o,s=o*Math.pow((t-90)/90,2),i=-i,s=-s):180<=t&&t<270?(s=o,i=-(i=o*Math.pow(1-(t-180)/90,2)),s=-s):270<=t&&t<360&&(s=o,i=o*Math.pow((t-270)/90,2)),i*=a,s*=a,0<=i?"1":"-1"),e=0<=s?"1":"-1";this.drawRobotMovement(Math.abs(i),Math.abs(s),h,e),this.sendMotorCommand(i,s)}}}drawRobotMovement(t,i,s,h){if(this.ctx){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="yellow",this.ctx.beginPath(),this.ctx.arc(this.robotX,this.robotY,5,0,2*Math.PI),this.ctx.fill();var e=100*this.lastStickMultiplier,a=this.lastStickAngle,o=this.robotX+e*Math.sin(a),e=this.robotY-e*Math.cos(a),n=(this.ctx.strokeStyle="blue",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(this.robotX,this.robotY),this.ctx.lineTo(o,e),this.ctx.stroke(),Math.PI/6),c=o-10*Math.sin(a-n),r=e+10*Math.cos(a-n),l=o-10*Math.sin(a+n),n=e+10*Math.cos(a+n),c=(this.ctx.beginPath(),this.ctx.moveTo(o,e),this.ctx.lineTo(c,r),this.ctx.moveTo(o,e),this.ctx.lineTo(l,n),this.ctx.stroke(),Math.abs(Math.sin(a))),r=this.WHEEL_BASE*this.canvasScale;let t=.01<c?r/c:1e3;1e3<t&&(t=1e3);let i=a*(180/Math.PI);i<0&&(i+=360);o=i<180?1:-1,e=this.robotX+o*t,l=this.robotY;this.ctx.fillStyle="red",this.ctx.beginPath(),this.ctx.arc(e,l,3,0,2*Math.PI),this.ctx.fill(),this.ctx.strokeStyle="red",this.ctx.lineWidth=1,this.ctx.beginPath(),this.ctx.arc(e,l,t,0,2*Math.PI),this.ctx.stroke(),this.ctx.strokeStyle="orange",this.ctx.lineWidth=1,this.ctx.beginPath(),this.ctx.moveTo(this.robotX,this.robotY),this.ctx.lineTo(e,l),this.ctx.stroke()}}sendMotorCommand(t,i){let s="0",h=0,e=(0!==t&&(s=0<t?"1":"-1",(h=Math.min(Math.round(Math.abs(t)),255))<50)&&(h=50),"0"),a=0;0!==i&&(e=0<i?"1":"-1",(a=Math.min(Math.round(Math.abs(i)),255))<50)&&(a=50);t=`${s},${h},${e},`+a;this.socket.emit("motorcommand",t)}}document.addEventListener("DOMContentLoaded",()=>{new AnalogStick});