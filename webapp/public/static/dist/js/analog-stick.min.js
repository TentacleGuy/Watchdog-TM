class AnalogStick{constructor(){this.stick=document.querySelector(".analog-stick"),this.bounds=document.querySelector(".analog-stick-bounds"),this.isDragging=!1,this.lastSentTime=0,this.updateInterval=100,this.MAX_SPEED=1,this.MAX_TURN_RATE=1,this.WHEEL_BASE=.3,this.canvasScale=100,this.arcAngle=Math.PI/2,this.canvas=document.getElementById("turning-canvas"),this.canvas&&(this.ctx=this.canvas.getContext("2d"),this.robotX=this.canvas.width/2,this.robotY=this.canvas.height-50),this.socket=window.sharedSocket,this.setupEventListeners()}setupEventListeners(){this.stick.addEventListener("mousedown",t=>this.startDragging(t)),this.stick.addEventListener("mousemove",t=>this.drag(t)),document.addEventListener("mouseup",()=>this.stopDragging()),this.stick.addEventListener("touchstart",t=>this.startDragging(t)),this.stick.addEventListener("touchmove",t=>this.drag(t)),document.addEventListener("touchend",()=>this.stopDragging())}startDragging(t){this.isDragging=!0;var s=this.bounds.getBoundingClientRect();this.initialX=("mousedown"===t.type?t:t.touches[0]).clientX-s.left,this.initialY=("mousedown"===t.type?t:t.touches[0]).clientY-s.top}drag(t){var s,i;this.isDragging&&(t.preventDefault(),s=this.bounds.getBoundingClientRect(),i=(t.type.startsWith("mouse")?t:t.touches[0]).clientX-s.left,t=(t.type.startsWith("mouse")?t:t.touches[0]).clientY-s.top,this.updateStickPosition(i,t))}stopDragging(){this.isDragging&&(this.isDragging=!1,this.reset())}reset(){this.stick.style.left="50%",this.stick.style.top="50%",this.sendMotorCommand(0,0,null,null),this.ctx&&this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}updateStickPosition(t,s){var i=this.bounds.getBoundingClientRect(),h=i.width/2,a=t-i.width/2,e=s-i.height/2,a=(h<Math.sqrt(a*a+e*e)&&(e=Math.atan2(e,a),t=h*Math.cos(e)+i.width/2,s=h*Math.sin(e)+i.height/2),this.stick.style.left=t/i.width*100+"%",this.stick.style.top=s/i.height*100+"%",(t-i.width/2)/h),e=(s-i.height/2)/h;this.calculateMotorValues(a,e)}calculateMotorValues(i,h){var a=Date.now();if(!(a-this.lastSentTime<this.updateInterval)){this.lastSentTime=a;var e,n,o,c,a=-h*this.MAX_SPEED,h=i*this.MAX_TURN_RATE,i=a-h*(this.WHEEL_BASE/2),r=a+h*(this.WHEEL_BASE/2);this.drawTurningPaths(a,h);let t=null,s=null;.01<Math.abs(h)&&(a=Math.abs(a/h),h=0<h?this.robotX+a*this.canvasScale:this.robotX-a*this.canvasScale,a=this.robotY,e=this.robotX-this.WHEEL_BASE/2*this.canvasScale,n=this.robotY,o=this.robotX+this.WHEEL_BASE/2*this.canvasScale,c=this.robotY,t=Math.hypot(e-h,n-a)/this.canvasScale,s=Math.hypot(o-h,c-a)/this.canvasScale),this.sendMotorCommand(i,r,t,s)}}drawTurningPaths(t,s){var i,h,a,e,n,o,c,r,l;this.ctx&&(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="yellow",this.ctx.beginPath(),this.ctx.arc(this.robotX,this.robotY,5,0,2*Math.PI),this.ctx.fill(),Math.abs(s)<.01?(this.ctx.strokeStyle="gray",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(this.robotX,this.robotY),this.ctx.lineTo(this.robotX,this.robotY-80)):(t=Math.abs(t/s),t=0<s?this.robotX+t*this.canvasScale:this.robotX-t*this.canvasScale,i=this.robotY,h=this.robotX-this.WHEEL_BASE/2*this.canvasScale,a=this.robotY,e=this.robotX+this.WHEEL_BASE/2*this.canvasScale,n=this.robotY,o=Math.atan2(a-i,h-t),c=Math.atan2(n-i,e-t),r=0<s?o-this.arcAngle:o+this.arcAngle,l=0<s?c-this.arcAngle:c+this.arcAngle,s=s<0,this.ctx.strokeStyle="blue",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t,i,Math.hypot(h-t,a-i),o,r,s),this.ctx.stroke(),this.ctx.strokeStyle="green",this.ctx.beginPath(),this.ctx.arc(t,i,Math.hypot(e-t,n-i),c,l,s)),this.ctx.stroke())}sendMotorCommand(t,s,i,h){let a,e;e=0<t?(a="1",Math.min(Math.round(255*Math.abs(t)/this.MAX_SPEED),255)):t<0?(a="-1",Math.min(Math.round(255*Math.abs(t)/this.MAX_SPEED),255)):(a="0",0);let n,o;o=0<s?(n="1",Math.min(Math.round(255*Math.abs(s)/this.MAX_SPEED),255)):s<0?(n="-1",Math.min(Math.round(255*Math.abs(s)/this.MAX_SPEED),255)):(n="0",0);t=a+","+e+","+n+","+o;this.socket.emit("motorcommand",t)}}document.addEventListener("DOMContentLoaded",()=>{new AnalogStick});