class AnalogStick{constructor(){this.stick=document.querySelector(".analog-stick"),this.bounds=document.querySelector(".analog-stick-bounds"),this.isDragging=!1,this.currentX=0,this.currentY=0,this.initialX=0,this.initialY=0,this.setupEventListeners()}setupEventListeners(){this.stick.addEventListener("mousedown",t=>this.startDragging(t)),document.addEventListener("mousemove",t=>this.drag(t)),document.addEventListener("mouseup",()=>this.stopDragging()),this.stick.addEventListener("touchstart",t=>this.startDragging(t)),document.addEventListener("touchmove",t=>this.drag(t)),document.addEventListener("touchend",()=>this.stopDragging()),document.addEventListener("keydown",t=>this.handleKeyboard(t)),document.addEventListener("keyup",()=>this.reset())}startDragging(t){this.isDragging=!0;var e=this.bounds.getBoundingClientRect();this.initialX="mousedown"===t.type?t.clientX-e.left:t.touches[0].clientX-e.left,this.initialY="mousedown"===t.type?t.clientY-e.top:t.touches[0].clientY-e.top}drag(t){var e,i;this.isDragging&&(t.preventDefault(),e=this.bounds.getBoundingClientRect(),i="mousemove"===t.type?t.clientX-e.left:t.touches[0].clientX-e.left,t="mousemove"===t.type?t.clientY-e.top:t.touches[0].clientY-e.top,this.updateStickPosition(i,t))}stopDragging(){this.isDragging=!1,this.reset()}reset(){this.stick.style.left="50%",this.stick.style.top="50%",this.currentX=0,this.currentY=0}handleKeyboard(t){var e={ArrowUp:()=>this.currentY-=10,ArrowDown:()=>this.currentY+=10,ArrowLeft:()=>this.currentX-=10,ArrowRight:()=>this.currentX+=10};e[t.key]&&(e[t.key](),this.updateStickPosition(this.currentX,this.currentY))}updateStickPosition(t,e){var i=this.bounds.getBoundingClientRect(),s=i.width/2,n=t-i.width/2,r=e-i.height/2;s<Math.sqrt(n*n+r*r)&&(r=Math.atan2(r,n),t=s*Math.cos(r)+i.width/2,e=s*Math.sin(r)+i.height/2),this.stick.style.left=t/i.width*100+"%",this.stick.style.top=e/i.height*100+"%"}}document.addEventListener("DOMContentLoaded",()=>{new AnalogStick});